name: Qualify

on:
  merge_group:
  pull_request:
    types:
      - opened
      - closed
      - reopened
      - synchronize
      - labeled
      - unlabeled
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  docs:
    if: github.event.pull_request.draft == false
    name: Test deploy documentation
    uses: ./.github/workflows/docs.yaml
    secrets: inherit
    with:
      version: __test__
      alias: ""
      set-default: false
      push: false

  check-semantic-version:
    name: Check semantic version
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with: 
        fetch-depth: 0
        ref: ${{ github.sha }}

    - name: Force correct release branch on workflow sha
      run: |
        git checkout -B ${{ github.ref_name }} ${{ github.sha }}

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"

    - name: Check next semantic version
      run: |
        uv sync --dev
        OUTPUT=$(uv run semantic-release --noop version --print)
        echo "$OUTPUT"
        if [ -z "$OUTPUT" ]; then
          echo "comment=No release will be made." >> $GITHUB_ENV
        else
          echo "comment=The next release will be v$OUTPUT" >> $GITHUB_ENV
        fi

    - name: Find Comment
      id: fc
      uses: peter-evans/find-comment@v3
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: This comment was written by a bot!

    - name: Create comment
      if: steps.fc.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ${{ env.comment }}
          <!-- This comment was written by a bot! -->
          
    - name: Update comment
      if: steps.fc.outputs.comment-id != ''
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        edit-mode: replace
        body: |
          ${{ env.comment }}
          <!-- This comment was written by a bot! -->
