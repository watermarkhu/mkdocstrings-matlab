name: Release

on:
  pull_request:
    types: 
      - closed
      - opened
      - reopened
      - synchronize
    branches: [main]

jobs:

  release:
    name: Semantic version release
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.semantic-release.outputs.released }}
      tag: ${{ steps.semantic-release.outputs.tag }}

    steps:
    - uses: actions/create-github-app-token@v2
      id: app-token
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Get GitHub App User ID
      id: get-user-id
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}
      run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"

    - run: |
        git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
        git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.sha }}
        token: ${{ steps.app-token.outputs.token }}
        persist-credentials: true
  
    - name: Force correct release branch on workflow sha
      run: |
        git checkout -B ${{ github.ref_name }} ${{ github.sha }}

    - name: Update version and changelogs
      id: semantic-release
      uses: python-semantic-release/python-semantic-release@v10
      with: 
        build: false
        changelog: true
        commit: true
        push: true
        tag: true
        vcs_release: true
        github_token: ${{ steps.app-token.outputs.token }}
        no_operation_mode: ${{ !github.event.pull_request.merged }}

  comment:
    name: Create or update comment
    if: github.event.pull_request.merged == false
    needs: release
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - name: Find Comment
      id: fc
      uses: peter-evans/find-comment@v3
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: This comment was written by a bot!

    - name: Create comment
      if: steps.fc.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Next release: `${{ needs.release.outputs.tag }}`
          <!-- This comment was written by a bot! -->
          
    - name: Update comment
      if: steps.fc.outputs.comment-id != ''
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        edit-mode: replace
        body: |
          Next release: `${{ needs.release.outputs.tag }}`
          <!-- This comment was written by a bot! -->

  deploy: 
    name: Deploy package distributions
    needs: release
    if: needs.release.outputs.released == 'true' && github.event.pull_request.merged
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      id-token: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.release.outputs.tag }}

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Build and publish package distributions
      run: |
        uv sync --no-dev
        uv build
        uv publish

    - name: Publish package distributions to GitHub Releases
      id: publish-dist
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.release.outputs.tag }}
        files: |
          dist/*.whl
          dist/*.tar.gz

  delete-test-document:
    name: Delete test documentation
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'documentation') && (github.event.action == 'closed')
    concurrency:
      group: gh-pages
      cancel-in-progress: false
    permissions:
      contents: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0 # Required to push to the documentation branch

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Sync dependencies
        run: |
          uv sync --no-dev --group docs

      - name: Configure Git Credentials
        run: |
          git config --global user.name github-actions[bot]
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git fetch origin gh-pages:gh-pages
  
      - name: delete testing documentation
        continue-on-error: true
        env:
          VERSION: ${{ format('pr-{0}', github.head_ref) || 'test' }}
        run: >
          uv run mike delete 
          --push --ignore-remote-status 
          --config-file mkdocs.yml
          --branch gh-pages
          $VERSION

  document:
    name: Deploy documentation
    needs: [release]
    if: needs.release.outputs.released == 'true' && github.event.pull_request.merged
    uses: ./.github/workflows/docs.yaml
    concurrency:
      group: gh-pages
      cancel-in-progress: false
    permissions:
      contents: write
    secrets: inherit
    with:
      version: ${{ needs.release.outputs.tag }}
      alias: latest
      set-default: true
      ref: ${{ needs.release.outputs.tag }}
      push: true
