{#- Template for "Output arguments" sections in docstrings.

This template renders a list of documented output arguments in the format
specified with the [`docstring_section_style`][] configuration option.

Context:
  section (griffe.DocstringSectionAttributes): The section to render.
-#}

{% block logs scoped %}
  {#- Logging block.

  This block can be used to log debug messages, deprecation messages, warnings, etc.
  -#}
  {{ log.debug("Rendering output arguments section") }}
{% endblock logs %}
{% import "language.html.jinja" as lang with context %}
{#- Language module providing the `t` translation method. -#}

{% if config.docstring_section_style == "table" %}
  {% block table_style scoped %}
    {#- Block for the `table` section style. -#}
    <p><span class="doc-section-title">{{ section.title or lang.t("Output arguments:") }}</span></p>
    <table>
      <thead>
        <tr>
          <th>{{ lang.t("Name") }}</th>
          <th>{{ lang.t("Type") }}</th>
          <th>{{ lang.t("Description") }}</th>
        </tr>
      </thead>
      <tbody>
        {% for argument in section.value %}
          <tr class="doc-section-item">
            <td>
              {% if config.argument_headings %}
                {% filter heading(
                    heading_level + 1,
                    role="argument",
                    id=html_id ~ "(" ~ argument.name ~ ")",
                    class="doc doc-heading doc-heading-argument",
                    toc_label=('<code class="doc-symbol doc-symbol-toc doc-symbol-argument"></code>&nbsp;'|safe if config.show_symbol_type_toc else '') + argument.name,
                  ) %}
                  <code>{{ argument.name }}</code>
                {% endfilter %}
              {% else %}
                <code>{{ argument.name }}</code>
              {% endif %}
            </td>
            <td>
              {% if argument.annotation %}
                {% with expression = argument.annotation, backlink_type = "returned-by" %}
                  <code>{% include "expression.html.jinja" with context %}</code>
                {% endwith %}
              {% endif %}
            </td>
            <td>
              <div class="doc-md-description">
                {{ argument.description|convert_markdown(heading_level, html_id, autoref_hook=autoref_hook) }}
              </div>
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
  {% endblock table_style %}
{% elif config.docstring_section_style == "list" %}
  {% block list_style scoped %}
    {#- Block for the `list` section style. -#}
    <p><span class="doc-section-title">{{ section.title or lang.t("Output arguments:") }}</span></p>
    <ul>
      {% for argument in section.value %}
        <li class="doc-section-item field-body">
          {% if config.argument_headings %}
            {% filter heading(
                heading_level + 1,
                role="argument",
                id=html_id ~ "(" ~ argument.name ~ ")",
                class="doc doc-heading doc-heading-argument",
                toc_label=('<code class="doc-symbol doc-symbol-toc doc-symbol-argument"></code>&nbsp;'|safe if config.show_symbol_type_toc else '') + argument.name,
              ) %}
              <b><code>{{ argument.name }}</code></b>
            {% endfilter %}
          {% else %}
            <b><code>{{ argument.name }}</code></b>
          {% endif %}
          {% if argument.annotation %}
            {% with expression = argument.annotation, backlink_type = "returned-by" %}
              {% if argument.name %} ({% endif %}
              <code>{% include "expression.html.jinja" with context %}</code>
              {% if argument.name %}){% endif %}
            {% endwith %}
          {% endif %}
          â€“
          <div class="doc-md-description">
            {{ argument.description|convert_markdown(heading_level, html_id, autoref_hook=autoref_hook) }}
          </div>
        </li>
      {% endfor %}
    </ul>
  {% endblock list_style %}
{% elif config.docstring_section_style == "spacy" %}
  {% block spacy_style scoped %}
    {#- Block for the `spacy` section style. -#}
    <table>
      <thead>
        <tr>
          <th><span class="doc-section-title">{{ (section.title or lang.t("OUTPUT ARGUMENT")).rstrip(":").upper() }}</span></th>
          <th><span>{{ lang.t("DESCRIPTION").upper() }}</span></th>
        </tr>
      </thead>
      <tbody>
        {% for argument in section.value %}
          <tr class="doc-section-item">
            <td>
              {% if config.argument_headings %}
                {% filter heading(
                    heading_level + 1,
                    role="argument",
                    id=html_id ~ "(" ~ argument.name ~ ")",
                    class="doc doc-heading doc-heading-argument",
                    toc_label=('<code class="doc-symbol doc-symbol-toc doc-symbol-argument"></code>&nbsp;'|safe if config.show_symbol_type_toc else '') + argument.name,
                  ) %}
                  <code>{{ argument.name }}</code>
                {% endfilter %}
              {% else %}
                <code>{{ argument.name }}</code>
              {% endif %}
            </td>
            <td class="doc-argument-details">
              <div class="doc-md-description">
                {{ argument.description|convert_markdown(heading_level, html_id, autoref_hook=autoref_hook) }}
              </div>
              {% if argument.name and argument.annotation %}
                <p>
                {% if argument.annotation %}
                  <span class="doc-argument-annotation">
                    <b>{{ lang.t("TYPE:") }}</b>
                    {% with expression = argument.annotation, backlink_type = "used-by" %}
                      <code>{% include "expression.html.jinja" with context %}</code>
                    {% endwith %}
                  </span>
                {% endif %}
                </p>
              {% endif %}
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
  {% endblock spacy_style %}
{% endif %}