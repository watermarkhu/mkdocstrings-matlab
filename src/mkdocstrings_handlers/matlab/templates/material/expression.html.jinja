{#- Template for expressions.

This template renders a Griffe expression,
which is a tree-like structure representing a Python expression.
-#}

{% block logs scoped %}
  {#- Logging block.

  This block can be used to log debug messages, deprecation messages, warnings, etc.
  -#}
{% endblock logs %}

{%- macro crossref(expression) -%}
  {#- Render a cross-reference to a parameter heading.

  Parameters:
      expression (griffe.expressions.Expr): The expression to render.

  Returns:
      The autorefs cross-reference, or the parameter name.
  -#}
  {%- if config.signature_crossrefs -%}
    {%- if signature -%}
      {%- filter stash_crossref(length=expression.name|length) -%}
        <autoref identifier="{{ expression.canonical_path }}" optional hover>{{ expression.name }}</autoref>
      {%- endfilter -%}
    {%- else -%}
      <autoref identifier="{{ expression.canonical_path }}" optional hover>{{ expression.name }}</autoref>
    {%- endif -%}
  {%- else -%}
    {{ expression.name }}
  {%- endif -%}a
{%- endmacro -%}

{%- macro render(expression, annotations_path, backlink_type="") -%}
  {#- Render an expression.

  Parameters:
      expression (griffe.Expr): The expression to render.
      annotations_path (str): Either "brief", "source", or "full".

  Returns:
      The rendered expression.
  -#}
  {%- if expression is string -%}
    {%- if signature -%}{{ expression|safe }}{%- else -%}{{ expression }}{%- endif -%}
  {%- elif expression.doc != "" -%}
    {%- if config.signature_crossrefs -%}
      <a class="autorefs autorefs-external" href="{{ expression.doc }}">{{ expression|string }}</a>
    {%- else -%}
      {{ expression|string }}
    {%- endif -%}
  {%- elif expression.classname == "CallableExpr" -%}
    {{ crossref(expression) }}
  {%- else -%}
    {%- for element in expression -%}
      {{ render(element, annotations_path) }}
    {%- endfor -%}
  {%- endif -%}
{%- endmacro -%}

{{ render(expression, config.annotations_path, backlink_type|default("")) }}
